/*
 * Full _nightSky.css
 * Defines the dark blue gradient background and styles for SVG star particles.
 * This file is intended to be imported into a main stylesheet (e.g., App.css)
 * and works in conjunction with a conditional rendering of the `.svg-star-background`
 * element (typically when in dark mode).
 */

/*
 * Container for the SVG star particles and the night sky gradient.
 * This element will be rendered in App.jsx when in dark mode.
 */
 .svg-star-background {
  position: absolute; /* Occupy the full space of its parent (.background-container) */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none; /* Ensure stars don't interfere with mouse events */
  overflow: hidden; /* Prevent scrollbars if stars extend beyond viewport */

  /* The dark blue gradient for the night sky */
  background: linear-gradient(
    180deg,
    #0a0a20 0%,
    #1a1a4a 50%,
    #2a2a7a 100%
  );
  background-size: 100% 100%;
}

/*
 * New Animation: Pop in, oscillate, then fade out
 * This animation will be applied to each individual SVG particle.
 */
@keyframes pop-oscillate-fade {
  0% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0) rotateZ(0deg);
  }
  10% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1.1) rotateZ(var(--random-rotation, 0deg));
  }
  20% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1) rotateZ(var(--random-rotation, 0deg));
  }
  40% {
    transform: translate(-50%, -50%) scale(1) translateY(-10px) rotateZ(var(--random-rotation, 0deg));
  }
  60% {
    transform: translate(-50%, -50%) scale(1) translateY(10px) rotateZ(var(--random-rotation, 0deg));
  }
  80% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(0.5) rotateZ(calc(var(--random-rotation, 0deg) * 1.5));
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0) rotateZ(calc(var(--random-rotation, 0deg) * 2));
  }
}

/*
 * Styling for individual SVG particles.
 * Each SVG will be absolutely positioned and animated.
 */
.svg-star-background .star-particle-svg {
  position: absolute;
  transform: translate(-50%, -50%);
  /* REMOVE THESE LINES: width and height will be set dynamically via inline style from component */
  /* width: 25px; */
  /* height: 25px; */
  /* The animation will be applied dynamically in the React component (StarParticle.jsx) */
}

/* Optional: Responsive adjustments for very small screens if needed */
@media (max-width: 768px) {
  .svg-star-background .star-particle-svg {
    /* REMOVE THESE LINES TOO, or adjust the JS size generation range for mobile */
    /* width: 18px; */
    /* height: 18px; */
  }
}