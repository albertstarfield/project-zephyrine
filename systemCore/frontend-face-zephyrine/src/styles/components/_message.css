/* ExternalAnalyzer/frontend-face-zephyrine/src/styles/components/_message.css */

.message-list {
  flex-grow: 1;
  overflow-y: auto;
  padding: 90px 30px;
  display: flex;
  flex-direction: column;
  gap: 15px; 
}

.message-avatar {
  /* Ensure the avatar container is a fixed size and circular */
  width: 40px; /* Adjust as needed */
  height: 40px; /* Adjust as needed */
  border-radius: 50%; /* Makes the container circular */
  background-color: var(--secondary-background); /* Or a specific avatar background color */
  display: flex;
  justify-content: center;
  align-items: center;
  flex-shrink: 0; /* Prevents avatar from shrinking */
  overflow: hidden; /* Ensures the image doesn't overflow the circular shape */
}

.message-avatar .avatar-image {
  width: 100%; /* Make the image take up the full width of its parent (.message-avatar) */
  height: 100%; /* Make the image take up the full height of its parent */
  border-radius: 50%; /* Ensure the image itself is also circular */
  object-fit: cover; /* This is crucial: it scales the image to cover the entire area while maintaining aspect ratio, cropping if necessary */
  /* If your image has transparency or you want a border: */
  /* border: 1px solid var(--border-color); */
}

/* You might want to adjust margin/padding on the .message itself or .message-content-container
   to ensure proper spacing around the avatar. */
.message.user .message-avatar {
    /* Styles for user avatar (e.g., background color, if different) */
    background-color: var(--accent-color); /* Example */
    color: var(--primary-text);
}

.message.assistant .message-avatar {
    /* Styles for assistant avatar container, if needed */
    /* background-color: var(--assistant-avatar-bg); */
}

/* Example for the initial 'U' text avatar if it's still used for user */
.message-avatar:not(:has(.avatar-image)) {
    font-weight: bold;
    color: var(--primary-text);
    font-size: 1.2em; /* Adjust font size for 'U' or 'A' */
}


.message {
  display: flex; 
  gap: 10px; 
  max-width: 75%; 
  word-wrap: break-word; 
}

.message.user {
  align-self: flex-end;
  flex-direction: row-reverse; 
}

.message.assistant {
  align-self: flex-start;
  flex-direction: row; 
}

.message-avatar {
  width: 36px; 
  height: 36px;
  border-radius: 50%;
  font-size: 16px;
  display: flex;
  align-items: center; 
  justify-content: center;
  font-weight: 500;
  flex-shrink: 0; 
  /* Align avatar with the start of the message content bubble */
  /* This might require the message content to not be align-self: flex-end for user if avatar is outside */
  /* For now, keeping it simple; if bubble is tall, avatar stays at its natural alignment within the flex row */
}

.message.user .message-avatar {
  background-color: var(--user-message-bg); 
  color: var(--user-message-text-color); 
}

.message.assistant .message-avatar {
  background-color: var(--assistant-message-bg); 
  color: var(--assistant-message-text-color); 
}

/* This div wraps the actual message bubble content and its actions */
.message-content-container { 
  display: flex;
  flex-direction: column;
  /* flex-grow: 1; /* This can make it take up all available space in the .message flex item */
}
.message.user .message-content-container {
  align-items: flex-end; /* Align content and actions to the right for user */
}
.message.assistant .message-content-container {
  align-items: flex-start; /* Align content and actions to the left for assistant */
}


.message-content {
  padding: 12px 18px; 
  border-radius: 22px; 
  line-height: 1.6;
  font-size: 0.95rem; 
  box-shadow: var(--small-shadow); 
  position: relative; 
  max-width: 100%; /* Ensure it doesn't overflow its parent if content is very wide */
}

.message.user .message-content {
  background-color: var(--user-message-bg);
  color: var(--user-message-text-color); 
  border-bottom-right-radius: 8px; 
}

.message.assistant .message-content {
  background-color: var(--assistant-message-bg);
  color: var(--assistant-message-text-color); 
  border-bottom-left-radius: 8px; 
}

.message-content p {
  margin-bottom: 0.5em;
}
.message-content p:last-child {
  margin-bottom: 0;
}

.message-content ul,
.message-content ol {
  margin-left: 20px;
  margin-bottom: 0.5em;
  padding-left: 5px; 
}
.message-content li {
  margin-bottom: 0.25em;
}

.message-content strong, .message-content b {
  font-weight: 600; 
}

.message-content code:not(pre code) { 
  background-color: rgba(0, 0, 0, 0.1); 
  color: inherit; 
  padding: 0.2em 0.4em;
  border-radius: var(--border-radius-small);
  font-size: 0.9em;
}

.message.user .message-content code:not(pre code) {
  background-color: rgba(0, 0, 0, 0.15); 
  color: var(--background-alt); 
}
.message.assistant .message-content code:not(pre code) {
   background-color: rgba(255, 255, 255, 0.2); 
   color: var(--assistant-message-text-color);
}


.message-content pre { 
  margin: 10px 0;
  padding: 12px;
  border-radius: var(--rounded-border); 
  overflow-x: auto;
}
.message-content pre code {
  padding: 0;
  background-color: transparent; 
  font-size: 0.9em;
}

.message-actions {
  display: flex;
  gap: 8px;
  margin-top: 8px; 
  opacity: 0; 
  transition: opacity 0.2s ease-in-out;
  /* Alignment is inherited from .message-content-container now */
}

.message:hover .message-actions { /* Show on hover of the entire message block */
  opacity: 1; 
}

.message-actions button {
  background: none;
  border: none;
  color: var(--secondary-text); 
  cursor: pointer;
  padding: 4px;
  border-radius: var(--border-radius-small);
  display: flex;
  align-items: center;
  gap: 4px;
}
.message-actions button:hover {
  color: var(--primary-text); 
  background-color: var(--hover); 
}
.message-actions button svg {
  width: 16px;
  height: 16px;
}

.message-edit-area {
  width: 100%; /* Take full width of the content area */
  /* margin-top: 8px; /* No longer needed if it replaces .message-content */
  background-color: inherit; /* Inherit bubble color */
  border-radius: inherit; /* Inherit bubble rounding */
  padding: 10px 15px; /* Match .message-content padding */
  box-shadow: var(--small-shadow);
}

.message-edit-area textarea {
  width: 100%;
  padding: 8px; /* Padding inside textarea */
  border-radius: var(--border-radius-medium); /* Use medium for inputs */
  border: 1px solid var(--border);
  background-color: var(--background-mid); 
  color: var(--primary-text);
  font-family: var(--font-family-sans);
  font-size: 0.9rem; /* Match message font size */
  resize: vertical;
  min-height: 50px; /* Adjust as needed */
  line-height: 1.5;
}

.message-edit-actions {
  display: flex;
  gap: 10px;
  margin-top: 8px;
  justify-content: flex-end;
}
.message-edit-actions button { 
  padding: 6px 12px;
  border-radius: var(--rounded-border);
  border: 1px solid transparent; /* Transparent border initially */
  cursor: pointer;
  font-size: 0.85em;
  font-weight: 500;
  transition: background-color 0.2s ease, border-color 0.2s ease;
}
.message-edit-actions button:first-of-type { /* Save button */
  background-color: var(--secondary); 
  color: #fff;
}
.message-edit-actions button:first-of-type:hover {
  background-color: color-mix(in srgb, var(--secondary) 85%, black);
}
.message-edit-actions button:last-of-type { /* Cancel button */
  background-color: var(--tertiary);
  color: var(--primary-text-alt);
}
.message-edit-actions button:last-of-type:hover {
  background-color: color-mix(in srgb, var(--tertiary) 85%, black);
}


.streaming-cursor { 
  display: inline-block;
  width: 8px;
  height: 1.2em; 
  background-color: currentColor; 
  animation: blink 1s step-end infinite;
  margin-left: 2px;
  vertical-align: text-bottom;
}

@keyframes blink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}

/* Styles for <think> blocks (rendered as <details>) */
.thought-block {
  border: 1px solid var(--tertiary); 
  border-radius: var(--rounded-border);
  margin: 12px 0 8px 0; 
  background-color: var(--background); /* Slightly different from background-mid to stand out */
  overflow: hidden; 
}

.thought-summary {
  padding: 10px 15px;
  cursor: pointer;
  font-weight: 500; 
  color: var(--primary-text-alt); 
  list-style: none; /* Remove default marker */
  display: flex; 
  align-items: center;
  gap: 8px;
  transition: background-color 0.2s ease;
  user-select: none; 
  background-color: var(--background-mid); /* Summary has slightly different bg */
}

.thought-summary::-webkit-details-marker { 
  display: none;
}

.thought-summary:hover {
  background-color: var(--hover); 
}

.thought-summary .summary-icon {
  display: inline-block;
  width: 0;
  height: 0;
  border-top: 5px solid transparent;
  border-bottom: 5px solid transparent;
  border-left: 7px solid currentColor; 
  transition: transform 0.2s ease-in-out;
}

.thought-block[open] > .thought-summary .summary-icon {
  transform: rotate(90deg); 
}

.thought-content {
  padding: 12px 15px;
  border-top: 1px solid var(--tertiary); 
  color: var(--primary-text); 
  font-size: 0.9em; 
  white-space: pre-wrap; 
  background-color: var(--background); /* Match the main thought-block bg or make slightly different */
}
.thought-content p:last-child {
  margin-bottom: 0;
}
.thought-content > *:first-child {
  margin-top: 0;
}
.thought-content > *:last-child {
  margin-bottom: 0;
}


/* Responsive adjustments */
@media (max-width: 768px) {
  .message {
    max-width: 90%; 
  }
  .message-content {
    padding: 10px 15px;
    font-size: 0.9rem;
  }
  .message-avatar {
    width: 32px;
    height: 32px;
    font-size: 14px;
  }
  .thought-summary {
    padding: 8px 12px;
  }
  .thought-content {
    padding: 10px 12px;
    font-size: 0.85em;
  }
}