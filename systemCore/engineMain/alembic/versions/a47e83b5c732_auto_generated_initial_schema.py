"""Auto-generated initial schema"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a47e83b5c732'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('file_index',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('size_bytes', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(), nullable=True),
    sa.Column('last_modified_os', sa.DateTime(), nullable=True),
    sa.Column('last_indexed_db', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('index_status', sa.String(), nullable=False),
    sa.Column('indexed_content', sa.Text(), nullable=True),
    sa.Column('embedding_json', sa.Text(), nullable=True),
    sa.Column('md5_hash', sa.String(length=32), nullable=True),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.Column('latex_representation', sa.Text(), nullable=True),
    sa.Column('latex_explanation', sa.Text(), nullable=True),
    sa.Column('vlm_processing_status', sa.String(), nullable=True),
    sa.CheckConstraint("index_status IN ('pending', 'indexed_text', 'indexed_meta', 'skipped_size', 'skipped_type', 'error_read', 'error_permission', 'processing', 'error_embedding', 'error_hash')", name='ck_file_index_status'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('file_index', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_file_index_file_name'), ['file_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_file_index_file_path'), ['file_path'], unique=True)
        batch_op.create_index(batch_op.f('ix_file_index_index_status'), ['index_status'], unique=False)
        batch_op.create_index(batch_op.f('ix_file_index_md5_hash'), ['md5_hash'], unique=False)
        batch_op.create_index('ix_file_index_name_status', ['file_name', 'index_status'], unique=False)
        batch_op.create_index('ix_file_index_path_hash', ['file_path', 'md5_hash'], unique=False)
        batch_op.create_index('ix_file_index_status_modified', ['index_status', 'last_modified_os'], unique=False)
        batch_op.create_index(batch_op.f('ix_file_index_vlm_processing_status'), ['vlm_processing_status'], unique=False)

    op.create_table('interactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('session_id', sa.String(), nullable=True),
    sa.Column('mode', sa.String(), nullable=True),
    sa.Column('input_type', sa.String(), nullable=True),
    sa.Column('user_input', sa.Text(), nullable=True),
    sa.Column('llm_response', sa.Text(), nullable=True),
    sa.Column('classification', sa.String(), nullable=True),
    sa.Column('classification_reason', sa.Text(), nullable=True),
    sa.Column('emotion_context_analysis', sa.Text(), nullable=True),
    sa.Column('tool_name', sa.String(), nullable=True),
    sa.Column('tool_parameters', sa.Text(), nullable=True),
    sa.Column('tool_result', sa.Text(), nullable=True),
    sa.Column('image_data', sa.Text(), nullable=True),
    sa.Column('url_processed', sa.String(), nullable=True),
    sa.Column('image_description', sa.Text(), nullable=True),
    sa.Column('latex_representation', sa.Text(), nullable=True),
    sa.Column('latex_explanation', sa.Text(), nullable=True),
    sa.Column('execution_time_ms', sa.Float(), nullable=True),
    sa.Column('rag_source_url', sa.String(), nullable=True),
    sa.Column('rag_history_ids', sa.String(), nullable=True),
    sa.Column('requires_deep_thought', sa.Boolean(), nullable=True),
    sa.Column('deep_thought_reason', sa.Text(), nullable=True),
    sa.Column('tot_analysis_requested', sa.Boolean(), nullable=True),
    sa.Column('tot_result', sa.Text(), nullable=True),
    sa.Column('tot_delivered', sa.Boolean(), server_default='0', nullable=True),
    sa.Column('assistant_action_analysis_json', sa.Text(), nullable=True),
    sa.Column('assistant_action_type', sa.String(), nullable=True),
    sa.Column('assistant_action_params', sa.Text(), nullable=True),
    sa.Column('assistant_action_executed', sa.Boolean(), server_default='0', nullable=True),
    sa.Column('assistant_action_result', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('interactions', schema=None) as batch_op:
        batch_op.create_index('ix_interactions_action_type_time', ['assistant_action_type', 'timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_interactions_assistant_action_type'), ['assistant_action_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_interactions_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_interactions_mode'), ['mode'], unique=False)
        batch_op.create_index(batch_op.f('ix_interactions_session_id'), ['session_id'], unique=False)
        batch_op.create_index('ix_interactions_session_mode_timestamp', ['session_id', 'mode', 'timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_interactions_tot_delivered'), ['tot_delivered'], unique=False)
        batch_op.create_index('ix_interactions_undelivered_tot', ['session_id', 'mode', 'tot_delivered', 'timestamp'], unique=False)

    op.create_table('applescript_attempts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('triggering_interaction_id', sa.Integer(), nullable=True),
    sa.Column('action_type', sa.String(), nullable=False),
    sa.Column('parameters_json', sa.Text(), nullable=False),
    sa.Column('attempt_number', sa.Integer(), nullable=False),
    sa.Column('generated_script', sa.Text(), nullable=True),
    sa.Column('execution_success', sa.Boolean(), nullable=True),
    sa.Column('execution_return_code', sa.Integer(), nullable=True),
    sa.Column('execution_stdout', sa.Text(), nullable=True),
    sa.Column('execution_stderr', sa.Text(), nullable=True),
    sa.Column('execution_duration_ms', sa.Float(), nullable=True),
    sa.Column('error_summary', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['triggering_interaction_id'], ['interactions.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id', 'action_type', 'parameters_json', 'attempt_number', name='uq_applescript_attempt')
    )
    with op.batch_alter_table('applescript_attempts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_applescript_attempts_action_type'), ['action_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_applescript_attempts_execution_success'), ['execution_success'], unique=False)
        batch_op.create_index(batch_op.f('ix_applescript_attempts_id'), ['id'], unique=False)
        batch_op.create_index('ix_applescript_attempts_lookup', ['action_type', 'parameters_json', 'execution_success', 'timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_applescript_attempts_session_id'), ['session_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_applescript_attempts_triggering_interaction_id'), ['triggering_interaction_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('applescript_attempts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_applescript_attempts_triggering_interaction_id'))
        batch_op.drop_index(batch_op.f('ix_applescript_attempts_session_id'))
        batch_op.drop_index('ix_applescript_attempts_lookup')
        batch_op.drop_index(batch_op.f('ix_applescript_attempts_id'))
        batch_op.drop_index(batch_op.f('ix_applescript_attempts_execution_success'))
        batch_op.drop_index(batch_op.f('ix_applescript_attempts_action_type'))

    op.drop_table('applescript_attempts')
    with op.batch_alter_table('interactions', schema=None) as batch_op:
        batch_op.drop_index('ix_interactions_undelivered_tot')
        batch_op.drop_index(batch_op.f('ix_interactions_tot_delivered'))
        batch_op.drop_index('ix_interactions_session_mode_timestamp')
        batch_op.drop_index(batch_op.f('ix_interactions_session_id'))
        batch_op.drop_index(batch_op.f('ix_interactions_mode'))
        batch_op.drop_index(batch_op.f('ix_interactions_id'))
        batch_op.drop_index(batch_op.f('ix_interactions_assistant_action_type'))
        batch_op.drop_index('ix_interactions_action_type_time')

    op.drop_table('interactions')
    with op.batch_alter_table('file_index', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_file_index_vlm_processing_status'))
        batch_op.drop_index('ix_file_index_status_modified')
        batch_op.drop_index('ix_file_index_path_hash')
        batch_op.drop_index('ix_file_index_name_status')
        batch_op.drop_index(batch_op.f('ix_file_index_md5_hash'))
        batch_op.drop_index(batch_op.f('ix_file_index_index_status'))
        batch_op.drop_index(batch_op.f('ix_file_index_file_path'))
        batch_op.drop_index(batch_op.f('ix_file_index_file_name'))

    op.drop_table('file_index')
    # ### end Alembic commands ###
